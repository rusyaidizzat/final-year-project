# Importing modules
import spidev                      # To communicate with SPI devices
import RPi.GPIO as GPIO            # To use GPIO pins
import sys                         # Import sys module
import BlynkLib                    # Import Blynk Library
from BlynkTimer import BlynkTimer  # Add delay in Blynk loop

# Start SPI connection
spi = spidev.SpiDev()           
spi.open(0,0)

#Establish connection to Blynk server
BLYNK_AUTH = '1PgQM9HHOa0g_74-PbmA5DajrZYUcpHd' 
blynk = BlynkLib.Blynk(BLYNK_AUTH)
timer = BlynkTimer()

#Read input from MCP3008 (channel 0-7) and convert into value of 1-1024
def analogInput(channel):
    spi.max_speed_hz = 1350000
    adc = spi.xfer2([1,(8+channel)<<4,0])
    data = ((adc[1]&3) << 8) + adc[2]
    return data

#Create a function to call other function in loop
def invoker(func):
    func()

#Relay function
def relayswitch():
    @blynk.VIRTUAL_WRITE(0)
    def v0_write_handler(value):
        print('Current V0 value: {}'.format(value[0]))
        GPIO.setmode(GPIO.BCM)
        GPIO.setup(2, GPIO.OUT)
        if int(format(value[0])) == 0:
            GPIO.output(2,0)
        else:
            GPIO.output(2,1)
        return value

#Main function (all sensors)
def sensor():
    
    #Water level sensor
    @blynk.VIRTUAL_READ(1)
    def v1_read_handler():
        outputwater = analogInput(0) # Reading from CH0
        
        #Convert value from input to value (0cm-15cm for water level)
        output7 = (((outputwater/10.24)*0.1)-15)*(-1)
        print('1 {:.1f}'.format (output7))
        blynk.virtual_write(1, '{:.1f}'.format (output7))


    #Humidity sensor (All 6 sensors)
    @blynk.VIRTUAL_READ(2)
    def v2_read_handler():
        outputf = analogInput(2) # Reading from CH2
        
        #Convert value from input to value (0%-100% for humidity)
        output6 = (outputf/10.24-100)*(-1)
        print('2 {:.1f}'.format (output6))
        blynk.virtual_write(2, '{:.1f}'.format (output6))
        blynk.virtual_write(9, '{:.1f}'.format (output6))


    @blynk.VIRTUAL_READ(3)
    def v3_read_handler():
        outpute = analogInput(3) # Reading from CH3
        output5 = (outpute/10.24-100)*(-1)
        print('3 {:.1f}'.format (output5))
        blynk.virtual_write(3, '{:.1f}'.format (output5))
        blynk.virtual_write(10, '{:.1f}'.format (output5))


    @blynk.VIRTUAL_READ(4)
    def v4_read_handler():
        outputd = analogInput(4) # Reading from CH4
        output4 = (outputd/10.24-100)*(-1)
        print('4 {:.1f}'.format (output4))
        blynk.virtual_write(4, '{:.1f}'.format (output4))
        blynk.virtual_write(11, '{:.1f}'.format (output4))


    @blynk.VIRTUAL_READ(5)
    def v5_read_handler():
        outputc = analogInput(5) # Reading from CH5
        output3 = (outputc/10.24-100)*(-1)
        print('5 {:.1f}'.format (output3))
        blynk.virtual_write(5, '{:.1f}'.format (output3))
        blynk.virtual_write(12, '{:.1f}'.format (output3))


    @blynk.VIRTUAL_READ(6)
    def v6_read_handler():
        outputb = analogInput(6) # Reading from CH6
        output2 = (outputb/10.24-100)*(-1)
        print('6 {:.1f}'.format (output2))
        blynk.virtual_write(6, '{:.1f}'.format (output2))
        blynk.virtual_write(13, '{:.1f}'.format (output2))


    @blynk.VIRTUAL_READ(7)
    def v7_read_handler():
        output = analogInput(7) # Reading from CH7
        output1 = (output/10.24-100)*(-1)
        print('7 {:.1f}'.format (output1))
        blynk.virtual_write(7, '{:.1f}'.format (output1))
        blynk.virtual_write(14, '{:.1f}'.format (output1))

    
    #call waterlevel function
    invoker(relayswitch)


#Set delay between loop (in this case delay is 5s)
timer.set_interval(5, sensor)

#Infinite loop
while True:
        blynk.run()
        timer.run()
